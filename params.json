{"name":"Evernote-dev-mode","tagline":"evernote mode for emacs which using developer key for auth.","body":"<p>\r\n<a href=\"http://code.google.com/p/emacs-evernote-mode/\">evernote</a>-mode 使得emacs用户可用直接用 orgmode 记笔记. here is how:\r\n</p>\r\n\r\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\r\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> Install evernote-mode</h2>\r\n<div class=\"outline-text-2\" id=\"text-1\">\r\n</div><div id=\"outline-container-sec-1-1\" class=\"outline-3\">\r\n<h3 id=\"sec-1-1\"><span class=\"section-number-3\">1.1</span> Install libgdbm</h3>\r\n<div class=\"outline-text-3\" id=\"text-1-1\">\r\n<p>\r\nThe pre-installed ruby on Mac OS X does not contain GDBM bindings. Re-install ruby and GDBM by\r\n</p>\r\n<div class=\"org-src-container\">\r\n\r\n<pre class=\"src src-sh\">rvm uninstall 1.9.3\r\nbrew install gdbm\r\nrvm install 1.9.3\r\n</pre>\r\n</div>\r\n</div>\r\n</div>\r\n<div id=\"outline-container-sec-1-2\" class=\"outline-3\">\r\n<h3 id=\"sec-1-2\"><span class=\"section-number-3\">1.2</span> Install evernote-mode ruby script</h3>\r\n<div class=\"outline-text-3\" id=\"text-1-2\">\r\n<div class=\"org-src-container\">\r\n\r\n<pre class=\"src src-sh\"><span style=\"color: #728a05;\">cd</span> evernote-mode/ruby\r\nruby setup.rb\r\ncp evernote-mode.el &lt;your emacs lisp load path&gt;\r\n</pre>\r\n</div>\r\n</div>\r\n</div>\r\n<div id=\"outline-container-sec-1-3\" class=\"outline-3\">\r\n<h3 id=\"sec-1-3\"><span class=\"section-number-3\">1.3</span> Setup your evernote-mode</h3>\r\n<div class=\"outline-text-3\" id=\"text-1-3\">\r\n<p>\r\nfirst you need to change the way your evernote login\r\n<a href=\"https://github.com/kechako/emacs-evernote-mode-developer-token\">https://github.com/kechako/emacs-evernote-mode-developer-token</a>\r\n</p>\r\n\r\n<p>\r\nusing developer token will be much more awesomer\r\n</p>\r\n<div class=\"org-src-container\">\r\n\r\n<pre class=\"src src-diff\"><span style=\"color: #52676f;\">diff --git a/evernote-mode.el b/evernote-mode.el</span>\r\n<span style=\"color: #52676f;\">index 313a1dc..e434841 100644</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">--- </span><span style=\"color: #e9e2cb; background-color: #042028;\">a/evernote-mode.el</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">+++ </span><span style=\"color: #e9e2cb; background-color: #042028;\">b/evernote-mode.el</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">@@ -162,6 +162,9 @@</span>\r\n<span style=\"color: #52676f;\">   \"*Non-nil means that password cache is enabled.</span>\r\n<span style=\"color: #52676f;\"> It is recommended to encrypt the file with EasyPG.\")</span>\r\n\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">(defvar evernote-developer-token nil</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">  \"*An developer token of your evernote\")</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span>\r\n<span style=\"color: #52676f;\"> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>\r\n<span style=\"color: #52676f;\"> ;; Interface for evernote-browsing-mode.</span>\r\n<span style=\"color: #52676f;\"> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">@@ -550,6 +553,8 @@</span><span style=\"color: #e9e2cb; background-color: #042028;\"> It is recommended to encrypt the file with EasyPG.\")</span>\r\n<span style=\"color: #52676f;\">   \"Login\"</span>\r\n<span style=\"color: #52676f;\">   (interactive)</span>\r\n<span style=\"color: #52676f;\">   (if (called-interactively-p) (enh-clear-onmem-cache))</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">  (if evernote-developer-token</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      (enh-command-login-token evernote-developer-token) </span>\r\n<span style=\"color: #52676f;\">     (unwind-protect</span>\r\n<span style=\"color: #52676f;\">         (let* ((cache (enh-password-cache-load))</span>\r\n<span style=\"color: #52676f;\">                (usernames (mapcar #'car cache))</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">@@ -567,7 +572,7 @@</span><span style=\"color: #e9e2cb; background-color: #042028;\"> It is recommended to encrypt the file with EasyPG.\")</span>\r\n<span style=\"color: #52676f;\">               (enh-command-login username passwd)</span>\r\n<span style=\"color: #52676f;\">               (setq evernote-username username)</span>\r\n<span style=\"color: #52676f;\">               (enh-password-cache-save (enutil-aset username cache passwd)))))</span>\r\n<span style=\"color: #c60007; font-weight: bold;\">-</span><span style=\"color: #c60007; font-weight: bold;\">    (enh-password-cache-close)))</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      (enh-password-cache-close))))</span>\r\n\r\n\r\n<span style=\"color: #52676f;\"> (defun evernote-open-note (&amp;optional ask-notebook)</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">@@ -1769,6 +1774,14 @@</span><span style=\"color: #e9e2cb; background-color: #042028;\"> It is recommended to encrypt the file with EasyPG.\")</span>\r\n<span style=\"color: #52676f;\">            (enutil-to-ruby-string passwd))))</span>\r\n\r\n\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">(defun enh-command-login-token (token)</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">  \"Issue login command\"</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">  (enh-command-issue</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">   (format \":class =&gt; %s, :auth_token =&gt; %s\"</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">           (enutil-to-ruby-string \"AuthCommand\")</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">           (enutil-to-ruby-string token))))</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span>\r\n<span style=\"color: #52676f;\"> (defun enh-command-get-notebook-attrs ()</span>\r\n<span style=\"color: #52676f;\">   \"Issue listnotebooks command\"</span>\r\n<span style=\"color: #52676f;\">   (let ((reply (enh-command-issue</span>\r\n<span style=\"color: #52676f;\">diff --git a/ruby/bin/enclient.rb b/ruby/bin/enclient.rb</span>\r\n<span style=\"color: #52676f;\">index 9067bad..a13ae8a 100755</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">--- </span><span style=\"color: #e9e2cb; background-color: #042028;\">a/ruby/bin/enclient.rb</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">+++ </span><span style=\"color: #e9e2cb; background-color: #042028;\">b/ruby/bin/enclient.rb</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">@@ -426,13 +426,17 @@</span><span style=\"color: #e9e2cb; background-color: #042028;\"> module EnClient</span>\r\n\r\n\r\n<span style=\"color: #52676f;\">   class AuthCommand &lt; Command</span>\r\n<span style=\"color: #c60007; font-weight: bold;\">-</span><span style=\"color: #c60007; font-weight: bold;\">    attr_accessor :user, :passwd</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">    attr_accessor :user, :passwd, :auth_token</span>\r\n\r\n<span style=\"color: #52676f;\">     def exec_impl</span>\r\n<span style=\"color: #c60007; font-weight: bold;\">-</span><span style=\"color: #c60007; font-weight: bold;\">      Formatter.to_ascii @user, @passwd</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      Formatter.to_ascii @user, @passwd, @auth_token</span>\r\n\r\n<span style=\"color: #52676f;\">       server_task do</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">        if @auth_token</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">          sm.authenticate_with_token @auth_token</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">        else</span>\r\n<span style=\"color: #52676f;\">           sm.authenticate @user, @passwd</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">        end</span>\r\n<span style=\"color: #52676f;\">         LOG.info \"Auth successed: auth_token = '#{sm.auth_token}', shared_id = '#{sm.shared_id}'\"</span>\r\n<span style=\"color: #52676f;\">         tm.put SyncTask.new(sm, dm, tm)</span>\r\n<span style=\"color: #52676f;\">         server_task true do # defer reply until first sync will be done.</span>\r\n<span style=\"color: #e9e2cb; background-color: #042028;\">@@ -1175,6 +1179,15 @@</span><span style=\"color: #e9e2cb; background-color: #042028;\"> module EnClient</span>\r\n<span style=\"color: #52676f;\">       @note_store = create_note_store @shared_id</span>\r\n<span style=\"color: #52676f;\">     end</span>\r\n\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">    def authenticate_with_token(token)</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      @user_store = create_user_store</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      user = @user_store.getUser token</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      @auth_token = token</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      @shared_id = user.shardId if user</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      @expiration = 60 * 60 * 24 * 365</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">      @note_store = create_note_store @shared_id</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span><span style=\"color: #728a05; font-weight: bold;\">    end</span>\r\n<span style=\"color: #728a05; font-weight: bold;\">+</span>\r\n<span style=\"color: #52676f;\">     def refresh_authentication(current_time)</span>\r\n<span style=\"color: #52676f;\">       if current_time &gt; @expiration - REFRESH_LIMIT_SEC * 1000</span>\r\n<span style=\"color: #52676f;\">         LOG.info \"refresh authentication\"</span>\r\n</pre>\r\n</div>\r\n\r\n\r\n<p>\r\nget developer token from\r\n<a href=\"https://www.evernote.com/api/DeveloperToken.action\">https://www.evernote.com/api/DeveloperToken.action</a>\r\n</p>\r\n\r\n<p>\r\nthen paste it to starter-kit-evernote\r\n</p>\r\n<div class=\"org-src-container\">\r\n\r\n<pre class=\"src src-lisp\">(<span style=\"color: #728a05;\">require</span> '<span style=\"color: #259185;\">evernote-mode</span>)\r\n(setq evernote-developer-token <span style=\"color: #259185;\">\"paste your token here\"</span>)\r\n(setq evernote-enml-formatter-command '(<span style=\"color: #259185;\">\"w3m\"</span> <span style=\"color: #259185;\">\"-dump\"</span> <span style=\"color: #259185;\">\"-I\"</span> <span style=\"color: #259185;\">\"UTF8\"</span> <span style=\"color: #259185;\">\"-O\"</span> <span style=\"color: #259185;\">\"UTF8\"</span>)) <span style=\"color: #52676f; font-style: italic;\">; </span><span style=\"color: #52676f; font-style: italic;\">optional</span>\r\n(global-set-key <span style=\"color: #259185;\">\"\\C-cn\"</span> 'evernote-write-note)\r\n(<span style=\"color: #728a05;\">provide</span> '<span style=\"color: #259185;\">starter-kit-evernote</span>)\r\n</pre>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<div id=\"outline-container-sec-1-4\" class=\"outline-3\">\r\n<h3 id=\"sec-1-4\"><span class=\"section-number-3\">1.4</span> write note with orgmode</h3>\r\n<div class=\"outline-text-3\" id=\"text-1-4\">\r\n<ul class=\"org-ul\">\r\n<li>随便开个orgmode\r\n</li>\r\n<li>用orgmode写完笔记以后 <code>C-c C-e t U</code> // 输出为utf-8文本\r\n</li>\r\n<li><code>C-c n</code> // evernote buffer\r\n</li>\r\n<li>will create in evernote like this\r\n</li>\r\n</ul>\r\n\r\n<div class=\"figure\">\r\n<p><img src=\"https://www.evernote.com/shard/s23/sh/e13e664c-2d1e-4a8b-9597-c062759b6732/19a4bd09e50725674caa5b17d7ee7655/deep/0/Screenshot%206/25/13%205:18%20PM.png\" alt=\"13%205:18%20PM.png\" />\r\n</p>\r\n</div>\r\n\r\n<blockquote>\r\n<p>\r\ntake note this way is awesome isn't it\r\n</p>\r\n</blockquote>\r\n</div>\r\n</div>\r\n</div>\r\n","google":"UA-32314154-1","note":"Don't delete this file! It's used internally to help with page regeneration."}